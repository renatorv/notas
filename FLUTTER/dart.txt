
bool validaTelefone(String telefone) {
  final foneRegExp = RegExp(r'(^[1-9][0-9]9[6-9]{1}[0-9]{7})');
   telefone = telefone
      .replaceAll('(', '')
      .replaceAll(')', '')
      .replaceAll('-', '')
      .replaceAll(' ', '')
      .trim();
  return foneRegExp.hasMatch(telefone);
}



# SUB LISTA
listaCartoesUsuarioCartaoVirtual = listaCartoesUsuario.where((crt) => crt["TIPO_CTR"] == 'CON').toList();

# DEIXAR SOMENTE NÚMEROS
final iReg = RegExp(r'(\d+)');
String decrypted = iReg.allMatches(encrypter.decrypt64(palavra)).map((m) => m.group(0)).join('');
USEI EM: /Users/rodrigomendoncasouza/IdeaProjects/APLICATIVOS/app_volus/lib/controllers/seguranca.dart

# VER TIPO DE VARIAVEL
var c = 'Vc é muito legal';
print(c is String); => true

# LISTA
# LISTAS ACEITA VALORES DUPLICADOS
var nomes = ['Ana','Bia','Carlos'];
nomes.add('Daniel');
nomes.add('Daniel');
nomes.add('Daniel');
print(nomes.elementAt(0)); => Ana
ou
print(nomes[5]); => Daniel

# Set (Conjunto)
# NAO ACEITA DUPLICADOS
var conjunto = {0,1,2,3,4,4,4,4};
Set<int> conjunto = {0,1,2,3,4,4,4,4};
print(conjunto.length); => retorna 5, pois o conjunto não aceita duplicados
print(conjunto is Set); => true

# Map, estrutura chave e valor
Map<String, double> notasDosAlunos = {
    "Ana": 9.7,
    "Bia": 9.2,
    "Carlos": 7.8,
};

for(var chave in notasDosAlunos.keys)
{
    print('chave = $chave');
}

for(var valor in notasDosAlunos.values)
{
    print('valor = $valor');
}

for(var registro in notasDosAlunos.entrie)
{
    print('${registro.key} = ${registro.value}');
}

# DYNAMIC
dynamic x = 'teste';
x = 123;
x = false;

***************************************************************************************************************************************************
FUNÇÕES

int exec(int a, int b, int Function(int, int) fn) {
  return fn(a, b);
}

main() {
  final r = exec(2, 3, (a, b) => (a * b) - 2);

  print('O valor de r é.: $r');
}

***************************************************************************************************************************************************

class Produto {
  String nome;
  double preco;

  //Construtor
  // Produto(String nome, double preco) {
  //   this.nome = nome;
  //   this.preco = preco;
  // }
  Produto({this.nome, this.preco});
}

main() 
{
  var p1 = Produto(nome: 'mouse', preco: 28.99);
  var p2 = Produto(preco: 22.99, nome: 'teclado');
  //p1.nome = 'Lapis';
  //p1.preco = 4.59;

  print('Produto ${p1.nome} tem preço R\$ ${p1.preco}');
  print('Produto ${p2.nome} tem preço R\$ ${p2.preco}');
}

***************************************************************************************************************************************************